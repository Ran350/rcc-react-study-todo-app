{"version":3,"sources":["components/NewTodo.tsx","components/TodoListItem.tsx","components/TodoList.tsx","components/App.tsx","index.tsx"],"names":["NewTodo","onAdd","useState","title","setTitle","onSubmit","event","preventDefault","className","type","name","onChange","currentTarget","value","TodoListItem","todo","onChangeDone","onRemove","done","checked","changedTodoId","id","onClick","undefined","dataset","TodoList","todoList","map","App","setTodoList","newTodo","Math","random","toString","oldTodoList","todoId","filter","ReactDOM","render","document","querySelector"],"mappings":"yLAMaA,EAAsB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpC,EAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,uBAAMC,SAZa,SAACC,GACpBA,EAAMC,iBAEQ,KAAVJ,IAIJF,EAAME,GACNC,EAAS,MAIqBI,UAAU,UAAxC,UACE,uBACEC,KAAK,OACLC,KAAK,QACLC,SAAU,SAACL,GAAD,OAAWF,EAASE,EAAMM,cAAcC,QAClDA,MAAOV,EACPK,UAAU,wBAEZ,wBAAQC,KAAK,SAAb,8BCnBOK,EAA2B,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAe7D,OACE,qBAAkBT,UAAU,eAA5B,UACE,wBACEA,UAAS,yDAEHO,EAAKG,KAAO,4BAA8B,GAFvC,cADX,UAME,uBAAOT,KAAK,WAAWU,QAASJ,EAAKG,KAAMP,SAtBxB,SAACL,GACxB,IAAMa,EAAUb,EAAMM,cAAcO,QAC9BC,EAAgBd,EAAMM,cAAcC,MAE1CG,EAAaI,EAAeD,IAkB+CN,MAAOE,EAAKM,KAElFN,EAAKZ,SAGR,wBAAQ,UAASY,EAAKM,GAAIC,QApBJ,SAAChB,QACciB,IAAnCjB,EAAMM,cAAcY,QAAQH,IAGhCJ,EAASX,EAAMM,cAAcY,QAAQH,KAgBnC,4BAZON,EAAKM,KCfLI,EAAuB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAAUV,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAC7D,OACE,oBAAIT,UAAU,WAAd,SACGkB,EAASC,KAAI,SAACZ,GAAD,OACV,cAAC,EAAD,CACIA,KAAMA,EACNC,aAAcA,EACdC,SAAUA,UCZXW,EAAW,WACtB,MAAgC1B,mBAAiB,IAAjD,mBAAOwB,EAAP,KAAiBG,EAAjB,KA4BA,OACE,sBAAKrB,UAAU,MAAf,UACE,cAAC,EAAD,CAASP,MA5BG,SAACE,GACf,IAAM2B,EAAU,CACd3B,QACAe,MAAM,EACNG,GAAIU,KAAKC,SAASC,YAGpBJ,GAAY,SAACK,GAAD,4BAAqBA,GAArB,CAAkCJ,UAuB5C,cAAC,EAAD,CAAUJ,SAAUA,EAAUV,aApBT,SAACmB,EAAoBjB,GAC5CW,GAAY,SAACK,GAAD,OACVA,EAAYP,KAAI,SAACZ,GACf,OAAIA,EAAKM,KAAOc,EACPpB,EAGF,2BAAKA,GAAZ,IAAkBG,gBAa0CD,SAR7C,SAACkB,GACpBN,GAAY,SAACK,GAAD,OAAiBA,EAAYE,QAAO,SAACrB,GAAD,OAAUA,EAAKM,KAAOc,eC7B1EE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,W","file":"static/js/main.8b666c45.chunk.js","sourcesContent":["import { FormEvent, useState, VFC } from \"react\";\n\ntype Props = {\n  onAdd: (title: string) => void;\n};\n\nexport const NewTodo: VFC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState<string>(\"\");\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (title === \"\") {\n      return;\n    }\n\n    onAdd(title);\n    setTitle(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"NewTodo\">\n      <input\n        type=\"text\"\n        name=\"title\"\n        onChange={(event) => setTitle(event.currentTarget.value)}\n        value={title}\n        className=\"NewTodo__inputTitle\"\n      />\n      <button type=\"submit\">追加</button>\n    </form>\n  );\n};\n","import { ChangeEvent, MouseEvent, VFC } from \"react\";\n\nimport { Todo } from \"../lib/todo\";\n\ntype Props = {\n  todo: Todo;\n  onChangeDone: (todoId: Todo[\"id\"], done: boolean) => void;\n  onRemove: (todoId: Todo[\"id\"]) => void;\n};\n\nexport const TodoListItem: VFC<Props> = ({ todo, onChangeDone, onRemove }) => {\n  const handleChangeTodo = (event: ChangeEvent<HTMLInputElement>) => {\n    const checked = event.currentTarget.checked;\n    const changedTodoId = event.currentTarget.value;\n\n    onChangeDone(changedTodoId, checked);\n  };\n\n  const handleClickRemove = (event: MouseEvent<HTMLButtonElement>) => {\n    if (event.currentTarget.dataset.id === undefined) {\n      return;\n    }\n    onRemove(event.currentTarget.dataset.id);\n  };\n\n  return (\n    <li key={todo.id} className=\"TodoListItem\">\n      <label\n        className={`\n            TodoListItem__label\n            ${todo.done ? \"TodoListItem__label--done\" : \"\"}\n        `}\n      >\n        <input type=\"checkbox\" checked={todo.done} onChange={handleChangeTodo} value={todo.id} />\n\n        {todo.title}\n      </label>\n\n      <button data-id={todo.id} onClick={handleClickRemove}>\n        削除\n      </button>\n    </li>\n  );\n};\n","import { VFC } from \"react\";\n\nimport { Todo } from \"../lib/todo\";\nimport { TodoListItem } from \"./TodoListItem\";\n\ntype Props = {\n  todoList: Todo[];\n  onChangeDone: (todoId: Todo[\"id\"], done: boolean) => void;\n  onRemove: (todoId: Todo[\"id\"]) => void;\n};\n\nexport const TodoList: VFC<Props> = ({ todoList, onChangeDone, onRemove }) => {\n  return (\n    <ul className=\"TodoList\">\n      {todoList.map((todo) => (\n          <TodoListItem\n              todo={todo}\n              onChangeDone={onChangeDone}\n              onRemove={onRemove}\n          />\n      ))}\n    </ul>\n  );\n};\n","import { useState, VFC } from \"react\";\n\nimport { Todo } from \"../lib/todo\";\nimport { NewTodo } from \"./NewTodo\";\nimport { TodoList } from \"./TodoList\";\n\nexport const App: VFC = () => {\n  const [todoList, setTodoList] = useState<Todo[]>([]);\n\n  const addTodo = (title: string) => {\n    const newTodo = {\n      title,\n      done: false,\n      id: Math.random().toString(),\n    };\n\n    setTodoList((oldTodoList) => [...oldTodoList, newTodo]);\n  };\n\n  const handleChangeDone = (todoId: Todo[\"id\"], done: boolean) => {\n    setTodoList((oldTodoList) =>\n      oldTodoList.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo;\n        }\n\n        return { ...todo, done };\n      })\n    );\n  };\n\n  const handleRemove = (todoId: Todo[\"id\"]) => {\n    setTodoList((oldTodoList) => oldTodoList.filter((todo) => todo.id !== todoId));\n  };\n\n  return (\n    <div className=\"App\">\n      <NewTodo onAdd={addTodo} />\n\n      <TodoList todoList={todoList} onChangeDone={handleChangeDone} onRemove={handleRemove} />\n    </div>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#app\"));\n"],"sourceRoot":""}